openapi: 3.1.0
x-stoplight:
  id: fhtjsxy5cr8js
info:
  title: Users API
  version: '1.0'
servers: []
paths:
  '/users/{userId}':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: Id of an existing user.
    get:
      summary: Get User Info by User ID
      tags: []
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: ../models/user.yaml
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    firstName: Alice
                    lastName: Smith
                    email: alice.smith@gmail.com
                    dateOfBirth: '1997-10-31'
                    emailVerified: true
                    signUpDate: '2019-08-24'
        '404':
          description: User Not Found
          content:
            application/json:
              schema:
                $ref: ../models/error.yaml
      operationId: get-users-userId
      description: Retrieve the information of the user with the matching user ID.
      security:
        - API Key - 1: []
  /users:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: ../models/user.yaml
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
          headers:
            X-Rate-Limit:
              schema:
                type: string
        '400':
          description: Missing Required Information
          content:
            application/json:
              schema:
                $ref: ../models/error.yaml
        '409':
          description: Email Already Taken
          content:
            application/json:
              schema:
                $ref: ../models/error.yaml
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/user.yaml
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
      security:
        - API Key - 1: []
      deprecated: true
    parameters: []
components:
  schemas: {}
  securitySchemes:
    API Key - 1:
      name: API Key
      type: apiKey
      in: query
